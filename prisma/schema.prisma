// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id            String          @id @default(uuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  username      String          @unique
  password      String
  type          String // buyer/seller
  Catalog       Catalog[]
  RefreshTokens RefreshTokens[]
  BuyOrders     Orders[]        @relation(name: "buyer")
  SellOrders    Orders[]        @relation(name: "seller")
}

model RefreshTokens {
  id          String @id
  hashedToken String
  userId      String
  user        User   @relation(fields: [userId], references: [id])
}

model Catalog {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  seller    String
  sellerId  User     @relation(fields: [seller], references: [id])
  Item      Item[]
}

model Item {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  price     Int
  catalog   Int
  catalogId Catalog  @relation(fields: [catalog], references: [id])
  Orders    Orders[]
}

model Orders {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sellerId   String
  SellerUser User   @relation(name: "seller", fields: [sellerId], references: [id])

  buyerId   String
  BuyerUser User   @relation(name: "buyer", fields: [buyerId], references: [id])

  itemId Int
  Item   Item @relation(fields: [itemId], references: [id])
}
